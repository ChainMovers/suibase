#!/bin/bash

# OS directory expected to be on $PATH
#
# Using a common one, often already added to .bashrc or .profile,
# but likely will need to revisit/fix this a few time...
OS_DIR_ON_PATH="$HOME/.local/bin"
OS_DIR_ON_PATH_ALT="~/.local/bin"

SUI_BASE_DIR="$HOME/sui-base"

# Utility functions.
setup_error() { echo "$*" 1>&2 ; exit 1; }
is_user_root () { [ "${EUID:-$(id -u)}" -eq 0 ]; }

# Function to simply create/update symlinks in $OS_DIR_ON_PATH
#
# Has no effect if symlink already exists and matching.
update_bin_path() {
  UBP_TARGET="$SUI_BASE_DIR/scripts/$1"
  if [ -d "$OS_DIR_ON_PATH" ]; then
    if [ ! -L "$OS_DIR_ON_PATH/$1" ]; then
      ln -s "$UBP_TARGET" "$OS_DIR_ON_PATH/$1"
      echo "   Symlink added: $OS_DIR_ON_PATH/$1 -> $UBP_TARGET"
    else
      # Verify link is as intended, if not replace it.
      UBP_READLINK=$( readlink -f "$OS_DIR_ON_PATH/$1" )
      if [[ "$UBP_READLINK" != "$UBP_TARGET" ]]; then
         ln -sf "$UBP_TARGET" "$OS_DIR_ON_PATH/$1"
         echo "   Symlink updated: $OS_DIR_ON_PATH/$1 -> $UBP_TARGET"
      fi
    fi
  fi
}

is_local_bin_on_path() {
  # Check if the installation dir is in the $PATH variable.
  if [[ ":$PATH:" == *":$OS_DIR_ON_PATH:"* ]]; then
      true; return
  elif [[ ":$PATH:" == *":$OS_DIR_ON_PATH_ALT:"* ]]; then
      true; return
  fi
  false; return
}

setup_local_bin_as_needed() {
  # Create $OS_DIR_ON_PATH if it does not exists.
  if [ ! -d "$OS_DIR_ON_PATH" ]; then
    mkdir -p "$OS_DIR_ON_PATH"
  fi

  if is_local_bin_on_path; then
    return
  fi

##### That may work, but affraid to enable it without testing
# if [[ $(uname) == "Darwin" ]]; then
    # On macOS, default to .zprofile since catalina, before
    # it was .bash_profile.
#    if [ -f "$HOME/.zprofile" ]; then
#      TARGET_FILE="$HOME/.zprofile"
#    else
#      if [ -f "$HOME/.bash_profile" ]; then
#        TARGET_FILE="$HOME/.bash_profile"
#      else
#        echo "No profile files found"
#      fi
#    fi
#    if [ -n "$TARGET_FILE" ]; then
      # https://unix.stackexchange.com/questions/26047/how-to-correctly-add-a-path-to-path
#      echo 'export PATH="${PATH:+${PATH}:}~/.local/bin"' >>"$TARGET_FILE"
#      source "$TARGET_FILE"
#    fi
#  fi

  echo "Please add $OS_DIR_ON_PATH to your \$PATH variable"
  echo
  echo "The installation will not proceed until you complete this step."
  echo
  echo "(Please report this to the developer to make the install script better)"
  exit 1
}

main() {
  if is_user_root; then
    setup_error "Should not install sui-base as root (or sudo)"
  fi

  # Verify that sui-base was cloned in user directory.
  if [ ! -f "$SUI_BASE_DIR/install" ]; then
    echo "sui-base should be git clone in user home directory [$HOME]"
    echo "See https://sui-base.io/how-to/install/ for more info."
    exit 1
  fi

  setup_local_bin_as_needed;

  echo "Starting installation of sui-base..."

  script_list=("localnet" "devnet" "lsui" "dsui" "csui" "asui")

  for script_name in ${script_list[@]}; do
    update_bin_path $script_name
  done

  # Final test that the scripts are "callable" by the user without
  # specifying a path.
  for script_name in ${script_list[@]}; do
    # Call into each script which should return a string echoing... its own name.
    test=$($script_name sui-base-script-name)
    if [ "$test" != "$script_name" ]; then
      setup_error "setup of $script_name symlink failed [$test]"
    fi
  done

  echo Scripts installed and verified.

  # Load sui-base common functions/globals to potentially
  # do more advanced default workdir creation.
  SCRIPT_COMMON_CALLER="$(readlink -f "$0")"
  WORKDIR="active"
  source "$HOME/sui-base/scripts/common/__globals.sh" "$SCRIPT_COMMON_CALLER" "$WORKDIR"

  create_cargobin_as_needed;

  username=$(whoami)
  echo
  echo "You can now start your localnet with:"
  echo "  \$ localnet start"
  echo
  echo "The first localnet download and build may take minutes."
  echo
  echo "For more info type \"localnet\"."
  echo
  echo "sui-base installation successful for user [$username]"

  exit 0
}

main;
