#!/bin/bash

# OS directory expected to be on $PATH
#
# Using a common one, often already added to .bashrc or .profile,
# but likely will need to revisit/fix this a few time...
OS_DIR_ON_PATH="$HOME/.local/bin"
OS_DIR_ON_PATH_ALT="~/.local/bin"

SUI_BASE_DIR="$HOME/sui-base"

# Utility functions.
setup_error() { echo "$*" 1>&2 ; exit 1; }
is_user_root () { [ "${EUID:-$(id -u)}" -eq 0 ]; }

# Function to simply create/update symlinks in $OS_DIR_ON_PATH
#
# Has no effect if symlink already exists and matching.
update_bin_path() {
  UBP_TARGET="$SUI_BASE_DIR/scripts/$1"
  if [ -d "$OS_DIR_ON_PATH" ]; then
    if [ ! -L "$OS_DIR_ON_PATH/$1" ]; then
      ln -s "$UBP_TARGET" "$OS_DIR_ON_PATH/$1"
      echo "   Symlink added: $OS_DIR_ON_PATH/$1 -> $UBP_TARGET"
    else
      # Verify link is as intended, if not replace it.
      UBP_READLINK=$( readlink -f "$OS_DIR_ON_PATH/$1" )
      if [[ "$UBP_READLINK" != "$UBP_TARGET" ]]; then
         ln -sf "$UBP_TARGET" "$OS_DIR_ON_PATH/$1"
         echo "   Symlink updated: $OS_DIR_ON_PATH/$1 -> $UBP_TARGET"
      fi
    fi
  fi
}

main() {
  if is_user_root; then
    setup_error "Should not install sui-base as root (or sudo)"
  fi

  # Verify that sui-base was cloned in user directory.
  if [ ! -f "$SUI_BASE_DIR/install" ]; then
    echo "sui-base should be git clone in user home directory [$HOME]"
    echo "See https://sui-base.io/how-to/install/ for more info."
    exit 1
  fi

  # Create $OS_DIR_ON_PATH if it does not exists.
  if [ ! -d "$OS_DIR_ON_PATH" ]; then
    mkdir -p "$OS_DIR_ON_PATH"
  fi

  # if [[ ":$PATH:" == *":$OS_DIR_ON_PATH:"* ]]; then
  if [[ ":$PATH:" == *":$OS_DIR_ON_PATH:"* ]]; then
      echo "Starting installation of sui-base..."
  elif [[ ":$PATH:" == *":$OS_DIR_ON_PATH_ALT:"* ]]; then
      echo "Starting installation of sui-base..."
  else
    echo "Please add $OS_DIR_ON_PATH to your \$PATH variable"
    echo
    echo "The installation will not proceed until you complete this step."
    echo
    echo "(Please report this to the developer to make the install script better)"
    exit 1
  fi

  username=$(whoami)
  update_bin_path "localnet"
  #update_bin_path "testnet"
  #update_bin_path "devnet"
  update_bin_path "lsui"
  update_bin_path "csui"
  #update_bin_path "tsui"
  #update_bin_path "dsui"
  update_bin_path "asui"

  # Final test that the scripts are "callable" by the user without
  # specifying a path.
  #
  # This installation script should remain "self-contain" and
  # avoid dependencies. It creates symlinks to other scripts,
  # but does not call into them, other then for this trivial
  # final test.
  test=$(localnet sui-base-script-name)
  if [ "$test" != "localnet" ]; then
    setup_error "setup of localnet symlink failed [$test]"
  fi

  test=$(lsui sui-base-script-name)
  if [ "$test" != "lsui" ]; then
    setup_error "setup of lsui symlink failed [$test]"
  fi

  test=$(csui sui-base-script-name)
  if [ "$test" != "csui" ]; then
    setup_error "setup of csui symlink failed [$test]"
  fi

  #test=$(tsui sui-base-script-name)
  #if [ "$test" != "tsui" ]; then
  #  setup_error "setup of tsui symlink failed"
  #fi

  #test=$(dsui sui-base-script-name)
  #if [ "$test" != "dsui" ]; then
  #  setup_error "setup of dsui symlink failed"
  #fi

  test=$(asui sui-base-script-name)
  if [ "$test" != "asui" ]; then
    setup_error "setup of asui symlink failed"
  fi

  echo Scripts installed and verified.

  # Load sui-base common functions/globals to potentially
  # do more advanced default workdir creation.
  SCRIPT_COMMON_CALLER="$(readlink -f "$0")"
  WORKDIR="active"
  source "$HOME/sui-base/scripts/common/__globals.sh" "$SCRIPT_COMMON_CALLER" "$WORKDIR"

  create_cargobin_as_needed;

  echo
  echo "You can now start your localnet with:"
  echo "  \$ localnet start"
  echo
  echo "The first localnet download and build may take minutes."
  echo
  echo "For more info type \"localnet\"."
  echo
  echo "sui-base installation successful for user [$username]"

  exit 0
}

main;
