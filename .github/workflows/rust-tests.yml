name: Rust Tests
# Test for rust API/demo.
#
# Does not include testing suibase-daemon (check instead with suibase-daemon-tests.yml).

on:
  push:
    branches: ["dev"]

  workflow_dispatch:

jobs:
  diff:
    runs-on: [ubuntu-latest]
    outputs:
      isChanged: ${{ steps.diff.outputs.isScript == 'true' || steps.diff.outputs.isRust == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Detect Changes
        uses: "./.github/actions/diffs"
        id: diff

  test:
    name: Test ${{ matrix.os }} ${{ matrix.ci_workdir }}
    needs: diff
    if: ${{ (needs.diff.outputs.isChanged == 'true') || (github.event_name == 'workflow_dispatch') }}

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        ci_workdir: [localnet, devnet, testnet, mainnet]
        include:
          - ci_branch: testnet
            ci_workdir: localnet
            ci_cache_all_crates: false
            ci_cache_provider: github
          - ci_branch: devnet
            ci_workdir: devnet
            ci_cache_all_crates: false
            ci_cache_provider: github
          - ci_branch: testnet
            ci_workdir: testnet
            ci_cache_all_crates: false
            ci_cache_provider: buildjet
          - ci_branch: mainnet
            ci_workdir: mainnet
            ci_cache_all_crates: false
            ci_cache_provider: buildjet

    steps:
      - name: Free Disk Space (Ubuntu)
        if: runner.os == 'Linux'
        uses: jlumbroso/free-disk-space@main
        with:
          # 'true' means remove...
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: false # Not sure if needed for heavy link... keep it for now.

      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Install Rust Toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache: "false" # Control cache in "Rust Caching" step instead.

      - name: Rust api/demo caching
        uses: Swatinem/rust-cache@v2
        env:
          RUST_ADD_CACHE_KEY_COMPONENT: ${{ matrix.os }}-${{ matrix.ci_branch }}
        with:
          workspaces: |
            rust/demo-app
            rust/helper-uniffi
            rust/helper
          cache-provider: ${{ matrix.ci_cache_provider }}
          cache-all-crates: ${{ matrix.ci_cache_all_crates }}

      - name: Sui Prerequesites (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install curl cmake gcc libssl-dev pkg-config libclang-dev libpq-dev build-essential

      - name: Sui Prerequesites (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install curl cmake

      - name: Prepare environment
        run: |
          mkdir -p "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          ln -s "$GITHUB_WORKSPACE" "$HOME/suibase"

      - name: Run rust demo/api tests only
        env:
          CI_WORKDIR: ${{ matrix.ci_workdir }}
          CI_BRANCH: ${{ matrix.ci_branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          "$HOME/suibase/scripts/tests/run-all.sh" --rust-tests
